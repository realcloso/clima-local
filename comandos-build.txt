# ================================
# üõ†Ô∏è BUILD DAS IMAGENS
# ================================

# Build da imagem da API de geolocaliza√ß√£o
docker build -t geolocation-api-image ./geolocation-api

# Build da imagem da API de clima
docker build -t clima-api-image ./clima-api

# ================================
# üß™ TESTES R√ÅPIDOS DAS IMAGENS
# ================================

# Rodar o container da API de clima manualmente
docker run --rm -p 5001:5001 clima-api-image

# Rodar o container da API de geolocaliza√ß√£o manualmente
docker run --rm -p 5002:8000 geolocation-api-image

# ================================
# üì° EXECU√á√ÉO COM REDE DOCKER
# ================================

# Executa a API de clima com rede personalizada
bash clima-api/run-weather.sh

# Executa a API de geolocaliza√ß√£o com rede personalizada
bash geolocation-api/run-geolocation.sh

# ================================
# üîç GERENCIAMENTO DE CONTAINERS
# ================================

# Listar containers em execu√ß√£o
docker ps

# Listar todos os containers (inclusive parados)
docker ps -a

# Parar um container
docker stop <nome-ou-id-do-container>

# Remover um container
docker rm <nome-ou-id-do-container>

# ================================
# üì¶ GERENCIAMENTO DE IMAGENS
# ================================

# Listar imagens dispon√≠veis
docker images

# Remover uma imagem
docker rmi <nome-ou-id-da-imagem>

# ================================
# üåê GERENCIAMENTO DE REDES
# ================================

# Listar redes Docker
docker network ls

# Criar rede customizada (caso necess√°rio)
docker network create my_custom_network

# Remover rede (caso n√£o esteja sendo usada)
docker network rm my_custom_network

# ================================
# üßπ LIMPEZA DE RECURSOS DOCKER
# ================================

# Remover containers parados, redes n√£o usadas, imagens dangling
docker system prune

# Remover tudo com confirma√ß√£o
docker system prune -a
